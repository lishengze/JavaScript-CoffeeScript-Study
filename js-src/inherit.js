// Generated by CoffeeScript 1.10.0
(function() {
  var Gadget, IPhone, iphone,

    bind = function(fn, me) {
                return function () {
                       return fn.apply(me, arguments);
                };
           },

    extend = function(child, parent) {
        for (var key in parent) {
             if (hasProp.call(parent, key))
                child[key] = parent[key];
        }
        function ctor() { this.constructor = child; }
        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
        child.__super__ = parent.prototype;
        return child;
    },

    hasProp = {}.hasOwnProperty;

  Gadget = (function() {
    function Gadget(name) {
      this.name = name;
      this.sell = bind(this.sell, this);
    }

    Gadget.prototype.sell = function() {
      return "Buy " + this.name;
    };

    return Gadget;

  })();

  IPhone = (function(superClass) {
    extend(IPhone, superClass);

    function IPhone() {
      this.nosell = bind(this.nosell, this); // 闭包的绑定;
      IPhone.__super__.constructor.call(this, "iphone");
    }

    IPhone.prototype.nosell = function() {
      return "Don't " + (this.sell());
    };

    return IPhone;

  })(Gadget);

  iphone = new IPhone;

  iphone.nosell();

}).call(this);
